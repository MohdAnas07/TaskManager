{"version":3,"sources":["useFetch.js","Component/TaskList/ListItem.js","Component/TaskList/TaskList.js","Component/TaskForm/TaskForm.js","App/App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort","ListItem","task","handleDelete","id","method","console","log","motion","div","className","desc","assignUser","date","time","class","onClick","TaskList","tasks","map","TaskForm","countTask","setCountTask","setDesc","Date","setDate","setTime","setAssignUser","isShow","setIsShow","height","newStyle","setNewStyle","taskToggle","IsPending","length","style","onSubmit","e","preventDefault","taskData","headers","body","JSON","stringify","action","for","type","required","value","onChange","target","placeholder","color","selected","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b09bb46.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n        fetch(url, { signal: abortCont.signal })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error(\"Could not fetch the data for that resource\")\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                setData(data)\r\n                setIsPending(false)\r\n                setError(null)\r\n            })\r\n            .catch(err => {\r\n                if (err.name === 'AbortError') {\r\n\r\n                } else {\r\n                    setIsPending(false)\r\n                    setError(err.message);\r\n                }\r\n            })\r\n\r\n        return () => abortCont.abort();\r\n    });\r\n    return { data, isPending, error }\r\n}\r\n\r\nexport default useFetch;","import React, { useHistory, useEffect, useState } from 'react'\r\nimport './TaskList.css'\r\nimport useFetch from '../../useFetch';\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nconst ListItem = ({ task }) => {\r\n\r\n    const handleDelete = () => {\r\n        fetch('http://localhost:8000/tasks/' + data.id, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            console.log(\"task deleted\");\r\n\r\n        })\r\n    }\r\n\r\n    const { data, error, isPending } = useFetch('http://localhost:8000/tasks/' + task.id, handleDelete)\r\n\r\n\r\n    const handleEdit = () => {\r\n        console.log(task.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <motion.div className='list'>\r\n            <div className='listItem'>\r\n                <p>{task.desc}</p>\r\n                <hr />\r\n                <p>{task.assignUser}</p>\r\n                <p>{task.date}</p>\r\n                <p>{task.time}</p>\r\n            </div>\r\n            <div className='edit-delete' >\r\n                <i class=\"fa fa-pencil-square fa-lg\" aria-hidden=\"true\" onClick={handleEdit}></i>\r\n                <button className='delete-btn' onClick={handleDelete}>delete</button>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport './TaskList.css'\r\nimport ListItem from './ListItem';\r\nimport useFetch from '../../useFetch'\r\n\r\nconst TaskList = () => {\r\n\r\n    const { data: tasks, isPending, error } = useFetch('http://localhost:8000/tasks')\r\n\r\n    return (\r\n        <div className='item'>\r\n            {tasks && tasks.map(task => {\r\n                return <ListItem task={task} />\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import React, { useState, useEffect } from 'react'\r\nimport { motion } from 'framer-motion';\r\nimport { Animated } from \"react-animated-css\";\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport './TaskForm.css'\r\nimport TaskList from '../TaskList/TaskList'\r\nimport useFetch from '../../useFetch';\r\n\r\nconst TaskForm = () => {\r\n    const [countTask, setCountTask] = useState(0)\r\n    const [desc, setDesc] = useState('')\r\n    const [date, setDate] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [assignUser, setAssignUser] = useState('Anas')\r\n    const [isShow, setIsShow] = useState(false)\r\n    const [newStyle, setNewStyle] = useState({ height: '0px'})\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const taskData = { desc, date, time, assignUser }\r\n\r\n        fetch('http://localhost:8000/tasks', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(taskData)\r\n        }).then(() => {\r\n            console.log('new task added');\r\n        })\r\n        setDesc('')\r\n        setDate('')\r\n        setTime('')\r\n        setAssignUser('Anas')\r\n    }\r\n\r\n    const { data, IsPending, error } = useFetch('http://localhost:8000/tasks', TaskForm);\r\n\r\n    const handleTask = () => {\r\n        setDesc('')\r\n        setDate('')\r\n        setTime('')\r\n        setAssignUser('Anas')\r\n    }\r\n\r\n    const taskToggle = () => {\r\n        if (newStyle.height === '0px') {\r\n            setNewStyle({ height: '350px' })\r\n            setIsShow(true)\r\n        } else {\r\n            setNewStyle({ height: '0px' })\r\n            setIsShow(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='form-container'>\r\n                <div className='task'>\r\n                    <div className='task-bar'>\r\n                        <p>TASKS - <span>{data?.length}</span></p>\r\n                        {!isShow ? <i className=\" fa fa-plus\" aria-hidden=\"true\" onClick={taskToggle}></i> : <i class=\"fa fa-window-minimize\" aria-hidden=\"true\" onClick={taskToggle}></i>}\r\n                    </div>\r\n\r\n                    <div style={newStyle} className='task-form'>\r\n                        <form onSubmit={handleSubmit} className='form' action=\"\">\r\n                            <div className=\"\">\r\n                                <label for=\"TaskDesc\">Task Description</label>\r\n                                <div>\r\n                                    <input type=\"text\"\r\n                                        required\r\n                                        value={desc}\r\n                                        onChange={(e) => setDesc(e.target.value)}\r\n                                        className=\"\" id=\"TaskDesc\" placeholder=\"Enter a Task...\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"Date_Time m-font\">\r\n                                <div className=\"Date\">\r\n                                    <label className='m-font'>Date</label>\r\n                                    <div className=\"date\">\r\n                                    <DateRangeIcon\r\n                                        className=\"date_icon\"\r\n                                        style={{ color: ' rgb(205, 205, 205)' }}\r\n                                    />\r\n                                    <DatePicker\r\n                                        selected={date}\r\n                                        onChange={date => {\r\n                                        setDate(date);\r\n                                        }}\r\n                                        className=\"Date_set\"\r\n                                    />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"time\">\r\n                                    <label className='m-font'>Time</label>\r\n                                    <div>\r\n                                    <ScheduleIcon\r\n                                        className=\"time_icon\"\r\n                                        style={{ color: ' rgb(205, 205, 205)' }}\r\n                                    />\r\n                                    <DatePicker\r\n                                        selected={time}\r\n                                        onChange={time => setTime(time)}\r\n                                        showTimeSelect\r\n                                        showTimeSelectOnly\r\n                                        timeIntervals={30}\r\n                                        timeCaption=\"Time\"\r\n                                        dateFormat=\"h:mm aa\"\r\n                                        className=\"Time_set\"\r\n                                    />\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            <div>\r\n                                <label for=\"TaskDesc\">Assign User</label>\r\n                                <select\r\n                                    required\r\n                                    value={assignUser}\r\n                                    onChange={(e) => setAssignUser(e.target.value)} className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                                    <option selected value='Anas'>Anas</option>\r\n                                    <option value=\"Anas\">Anas</option>\r\n                                    <option value=\"Anshu\">Anshu</option>\r\n                                    <option value=\"mohd\">mohd</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='cancel-save-btn' >\r\n                                <button className='btn delete-btn' onClick={handleTask}>cancel</button>\r\n                                <button className='btn save-btn' onClick={() => {\r\n                                    setCountTask(countTask + 1)\r\n\r\n                                }}>save</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <TaskList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","// import Sidenav from '../Component/Sidenav/Sidenav';\nimport TaskForm from '../Component/TaskForm/TaskForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}