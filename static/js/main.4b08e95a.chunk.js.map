{"version":3,"sources":["useFetch.js","Component/TaskList/ListItem.js","Component/TaskList/TaskList.js","Component/TaskForm/TaskForm.js","App/App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort","ListItem","task","handleDelete","id","method","console","log","className","desc","assignUser","date","time","class","onClick","TaskList","tasks","map","TaskForm","countTask","setCountTask","setDesc","setDate","setTime","setAssignUser","isShow","setIsShow","taskToggle","IsPending","length","style","display","onSubmit","e","preventDefault","taskData","headers","body","JSON","stringify","action","for","type","required","value","onChange","target","placeholder","selected","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b08e95a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n        fetch(url, { signal: abortCont.signal })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error(\"Could not fetch the data for that resource\")\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                setData(data)\r\n                setIsPending(false)\r\n                setError(null)\r\n            })\r\n            .catch(err => {\r\n                if (err.name === 'AbortError') {\r\n\r\n                } else {\r\n                    setIsPending(false)\r\n                    setError(err.message);\r\n                }\r\n            })\r\n\r\n        return () => abortCont.abort();\r\n    });\r\n    return { data, isPending, error }\r\n}\r\n\r\nexport default useFetch;","import React, { useHistory, useEffect, useState } from 'react'\r\nimport './TaskList.css'\r\nimport useFetch from '../../useFetch'\r\n\r\nconst ListItem = ({ task }) => {\r\n\r\n    const handleDelete = () => {\r\n        fetch('http://localhost:8000/tasks/' + data.id, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            console.log(\"task deleted\");\r\n\r\n        })\r\n    }\r\n\r\n    const { data, error, isPending } = useFetch('http://localhost:8000/tasks/' + task.id, handleDelete)\r\n\r\n\r\n    const handleEdit = () => {\r\n        console.log(task.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='list'>\r\n            <div className='listItem'>\r\n                <p>{task.desc}</p>\r\n                <hr />\r\n                <p>{task.assignUser}</p>\r\n                <p>{task.date}</p>\r\n                <p>{task.time}</p>\r\n            </div>\r\n            <div className='edit-delete' >\r\n                <i class=\"fa fa-pencil-square fa-lg\" aria-hidden=\"true\" onClick={handleEdit}></i>\r\n                <button className='delete-btn' onClick={handleDelete}>delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport './TaskList.css'\r\nimport ListItem from './ListItem';\r\nimport useFetch from '../../useFetch'\r\n\r\nconst TaskList = () => {\r\n\r\n    const { data: tasks, isPending, error } = useFetch('http://localhost:8000/tasks')\r\n\r\n    return (\r\n        <div className='item'>\r\n            {tasks && tasks.map(task => {\r\n                return <ListItem task={task} />\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Animated } from \"react-animated-css\";\r\nimport './TaskForm.css'\r\nimport TaskList from '../TaskList/TaskList'\r\nimport useFetch from '../../useFetch';\r\n\r\nconst TaskForm = () => {\r\n    const [countTask, setCountTask] = useState(0)\r\n    const [desc, setDesc] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [assignUser, setAssignUser] = useState('Anas')\r\n    // const [isPending, setIsPending] = useState(false)\r\n    const [isShow, setIsShow] = useState(false)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const taskData = { desc, date, time, assignUser }\r\n        // setIsPending(true)\r\n        console.log(taskData.length)\r\n\r\n        fetch('http://localhost:8000/tasks', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(taskData)\r\n        }).then(() => {\r\n            console.log('new task added');\r\n            // setIsPending(false)\r\n        })\r\n    }\r\n\r\n    const { data, IsPending, error } = useFetch('http://localhost:8000/tasks', TaskForm);\r\n\r\n    const handleTask = () => {\r\n        setDesc('')\r\n        setDate('')\r\n        setTime('')\r\n        setAssignUser('Anas')\r\n    }\r\n\r\n    const taskToggle = () => {\r\n        if (!isShow) {\r\n            setIsShow(true)\r\n        } else {\r\n            setIsShow(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='form-container'>\r\n                <div className='task'>\r\n                    <div className='task-bar'>\r\n                        <p>TASKS - <span>{data?.length}</span></p>\r\n                        {!isShow ? <i className=\" fa fa-plus\" aria-hidden=\"true\" onClick={taskToggle}></i> : <i class=\"fa fa-window-minimize\" aria-hidden=\"true\" onClick={taskToggle}></i>}\r\n                    </div>\r\n\r\n                    <div style={{ display: isShow ? \"block\" : \"none\" }} className='task-form'>\r\n                        <form onSubmit={handleSubmit} className='form' action=\"\">\r\n                            <div className=\"\">\r\n                                <label for=\"TaskDesc\">Task Description</label>\r\n                                <div>\r\n                                    <input type=\"text\"\r\n                                        required\r\n                                        value={desc}\r\n                                        onChange={(e) => setDesc(e.target.value)}\r\n                                        className=\"\" id=\"TaskDesc\" placeholder=\"Enter a Task...\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className='date-time'>\r\n                                <div className=\"date\">\r\n                                    <p for=\"Date\">Date</p>\r\n                                    <div className='icon-contain'>\r\n                                        <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                                        <input type=\"date\"\r\n                                            required\r\n                                            value={date}\r\n                                            onChange={(e) => setDate(e.target.value)}\r\n                                            id=\"Date\" name=\"Date\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"time\">\r\n                                    <p for=\"Time\">Time</p>\r\n                                    <div className=\"icon-contain time-icon\">\r\n                                        <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\r\n                                        <select\r\n                                            required\r\n                                            value={time}\r\n                                            onChange={(e) => setTime(e.target.value)} className=\"select-op \" id=\"Time\">\r\n                                            <option selected> Time</option>\r\n                                            <option value='8:00AM'>8:00AM</option>\r\n                                            <option value='9:00AM'>9:00AM</option>\r\n                                            <option value='10:00AM'>10:00AM</option>\r\n                                            <option value='11:00AM'>11:00AM</option>\r\n                                            <option value='12:00PM'>12:00PM</option>\r\n                                            <option value='1:00PM'>1:00PM</option>\r\n                                            <option value='2:00PM'>2:00PM</option>\r\n                                            <option value='3:00PM'>3:00PM</option>\r\n                                            <option value='4:00PM'>4:00PM</option>\r\n                                            <option value='5:00PM'>5:00PM</option>\r\n                                            <option value='6:00PM'>6:00PM</option>\r\n                                            <option value='7:00PM'>7:00PM</option>\r\n                                            <option value='8:00PM'>8:00PM</option>\r\n                                            <option value='9:00PM'>9:00PM</option>\r\n                                            <option value='10:00PM'>10:00PM</option>\r\n                                            <option value='11:00PM'>11:00PM</option>\r\n                                            <option value='12:00AM'>12:00AM</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label for=\"TaskDesc\">Assign User</label>\r\n                                <select\r\n                                    required\r\n                                    value={assignUser}\r\n                                    onChange={(e) => setAssignUser(e.target.value)} className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                                    <option selected value='Anas'>Anas</option>\r\n                                    <option value=\"Anas\">Anas</option>\r\n                                    <option value=\"Anshu\">Anshu</option>\r\n                                    <option value=\"mohd\">mohd</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='cancel-save-btn' >\r\n                                <button className='btn delete-btn' onClick={handleTask}>cancel</button>\r\n                                <button className='btn save-btn' onClick={() => setCountTask(countTask + 1)}>save</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <TaskList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","// import Sidenav from '../Component/Sidenav/Sidenav';\nimport TaskForm from '../Component/TaskForm/TaskForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}